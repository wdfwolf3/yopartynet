<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.3.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd">

    <mvc:annotation-driven/>

    <context:component-scan base-package="com.yoparty.controller, com.yoparty.exception.handler"/>

    <!--会在Spring MVC上下文中定义一个org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler，
    它会像一个检查员，对进入DispatcherServlet的URL进行筛查，如果发现是静态资源的请求，就将该请求转由Web应用服务器默认的Servlet处理，
    如果不是静态资源的请求，才由DispatcherServlet继续处理。-->
    <!--<mvc:default-servlet-handler/>-->

    <!--springmvc的处理静态资源方法-->
    <mvc:resources mapping="/css/**" location="/WEB-INF/css/" cache-period=""/>
    <mvc:resources mapping="/js/**" location="/WEB-INF/js/" cache-period=""/>
    <mvc:resources mapping="/images/**" location="/WEB-INF/images/" cache-period=""/>

    <!--&lt;!&ndash;Ordinary view resolver. This is for jsp.&ndash;&gt;-->
    <!--<bean id="viewResolver"-->
    <!--class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
    <!--<property name="prefix" value="/WEB-INF/jsp/"/>-->
    <!--<property name="suffix" value=".jsp"/>-->
    <!--<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />-->
    <!--</bean>-->


    <!--针对freemarker的视图配置-->
    <bean id="viewResolver"
          class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="cache" value="true"/>
        <property name="prefix" value=""/>
        <property name="suffix" value=".ftl"/>
        <property name="contentType" value="text/html;charset=UTF-8"/>
        <property name="requestContextAttribute" value="request"/>
        <property name="exposeSpringMacroHelpers" value="true"/>
        <property name="exposeRequestAttributes" value="true"/>
        <property name="exposeSessionAttributes" value="true"/>
    </bean>

    <!-- View resolvers can also be configured with ResourceBundles or XML files.
        If you need different view resolving based on Locale, you have to use the
        resource bundle resolver. -->
    <!-- 这个是针对返回视图还是json值的视图配置   来分别处理同步和异步请求 -->
    <!--<bean
            class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
            <property name="mediaTypes">
                <map>
                    <entry key="html" value="text/html" />
                    <entry key="json" value="application/json" />
                </map>
            </property>
            <property name="favorParameter" value="true" />
            <property name="viewResolvers">
                <list>
                    <bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />
                    <bean id="viewResolver"
                        class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
                        <property name="cache" value="true" />
                        <property name="prefix" value="" />
                        <property name="suffix" value=".ftl" />
                        <property name="contentType" value="text/html;charset=UTF-8"></property>
                        <property name="requestContextAttribute" value="request" />
                        <property name="exposeSpringMacroHelpers" value="true" />
                        <property name="exposeRequestAttributes" value="true" />
                        <property name="exposeSessionAttributes" value="true" />
                    </bean>
                </list>
            </property>
            <property name="defaultContentType" value="text/html" />
        </bean>
        -->
</beans>